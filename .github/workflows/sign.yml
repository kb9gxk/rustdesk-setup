name: Sign Rustdesk Installers

on:
  workflow_call:  # Allows execution when called by master.yml
  workflow_dispatch:  # Allows manual triggering
  workflow_run:
    workflows: ["Build Rustdesk Installers"]
    types:
      - completed

jobs:
  sign:
    runs-on: windows-latest
    steps:
      - name: Download Artifacts (Default Build)
        uses: actions/download-artifact@v4
        with:
          name: 'rustdesk-installer-default'
          path: artifacts

      - name: Download Artifacts (Jeff Build)
        uses: actions/download-artifact@v4
        with:
          name: 'rustdesk-installer-jeff'
          path: artifacts

      - name: Decode and Save Code Signing Certificate
        shell: bash
        run: |
          echo "${{ secrets.CODE_SIGNING_CERTIFICATE }}" | base64 -d > artifacts/code-signing.pfx
          echo "Certificate decoded successfully"

      - name: Check if pfx file exists
        shell: bash
        run: |
          ls -al artifacts
          file artifacts/code-signing.pfx
          echo "Decoded certificate listed"
      
      - name: Locate signtool.exe
        id: find_signtool
        shell: pwsh
        run: |
          $signtoolPath = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits\10\bin\" -Recurse -Filter signtool.exe | 
            Where-Object { $_.FullName -match "x64" } | 
            Select-Object -First 1 -ExpandProperty FullName

          if (-not $signtoolPath) {
            Write-Host "ERROR: signtool.exe not found!"
            exit 1
          }
          Write-Host "SIGNSUCCESS: Found signtool.exe at $signtoolPath"
          echo "SIGNSUCCESS_PATH=$signtoolPath" >> $GITHUB_ENV

      - name: List all artifact files
        shell: bash
        run: |
          echo "Listing all files in the artifacts directory"
          ls -al artifacts

      - name: Sign Executables
        env:
          CODE_SIGNING_CERTIFICATE_PASSWORD: '${{ secrets.CODE_SIGNING_CERTIFICATE_PASSWORD }}'
        shell: pwsh
        run: |
          Write-Host "Attempting to sign the executables..."
          Get-ChildItem -Path "artifacts" -Filter "*.exe" | ForEach-Object {
            Write-Host "Signing: $($_.FullName)"
            & "${{ env.SIGNSUCCESS_PATH }}" sign /fd SHA256 /f "artifacts/code-signing.pfx" /p "$env:CODE_SIGNING_CERTIFICATE_PASSWORD" /t http://timestamp.digicert.com /v $_.FullName
          }

      - name: Upload Signed Installers
        uses: actions/upload-artifact@v4
        with:
          name: signed-rustdesk-installers
          path: artifacts/*.exe
