name: 2 - Build Rustdesk Installers

on:
  workflow_call:
    secrets:
      RUSTDESK_CONFIG: ${{ secrets.RUSTDESK_CONFIG }}
      RUSTDESK_PASSWORD: ${{ secrets.RUSTDESK_PASSWORD }}

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [default, jeff]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Prepared Artifacts
        uses: actions/download-artifact@v4
        with:
          name: prep-artifacts
          path: .

      - name: Set Environment Variables
        env:
          RUSTDESK_CONFIG: ${{ secrets.RUSTDESK_CONFIG }}
          RUSTDESK_PASSWORD: ${{ secrets.RUSTDESK_PASSWORD }}
        run: |
          echo "RUSTDESK_CONFIG=${{ secrets.RUSTDESK_CONFIG }}" >> $GITHUB_ENV
          echo "RUSTDESK_PASSWORD=${{ secrets.RUSTDESK_PASSWORD }}" >> $GITHUB_ENV
        shell: bash

      - name: Debug Secrets (Redacted)
        run: |
          if ("$env:RUSTDESK_CONFIG" -eq "") { Write-Output "⚠ RUSTDESK_CONFIG is missing!" } else { Write-Output "✅ RUSTDESK_CONFIG is set!" }
          if ("$env:RUSTDESK_PASSWORD" -eq "") { Write-Output "⚠ RUSTDESK_PASSWORD is missing!" } else { Write-Output "✅ RUSTDESK_PASSWORD is set!" }
        shell: pwsh

      - name: Modify Configuration.cs (Jeff)
        if: matrix.build_type == 'jeff'
        run: |
          $configFile = ".\RustdeskSetup\Configuration.cs"
          $configContent = Get-Content $configFile

          $configValue = "private const string DefaultConfigValue = `"$($env:RUSTDESK_CONFIG)`";"
          $passwordValue = "private const string DefaultPasswordValue = `"$($env:RUSTDESK_PASSWORD)`";"

          $newConfigContent = $configContent -replace 'private const string DefaultConfigValue = .*;', $configValue
          $newConfigContent = $newConfigContent -replace 'private const string DefaultPasswordValue = .*;', $passwordValue

          $newConfigContent | Set-Content $configFile
        shell: pwsh

      - name: Restore dependencies
        run: dotnet restore "rustdesk-setup.csproj"

      - name: Build project
        run: >-
          dotnet build "rustdesk-setup.csproj" --configuration Release --no-restore

      - name: Publish project
        run: >-
          dotnet publish "rustdesk-setup.csproj" --configuration Release
          --output publish --no-build

      - name: Rename Default Executable (for default build)
        if: matrix.build_type == 'default'
        shell: pwsh
        run: |
          Rename-Item -Path "publish/rustdesk-setup.exe" -NewName "rustdesk-setup.exe"

      - name: Rename Jeff Executable (for jeff build)
        if: matrix.build_type == 'jeff'
        shell: pwsh
        run: |
          Rename-Item -Path "publish/rustdesk-setup.exe" -NewName "rustdesk-setup-jeff.exe"

      - name: Upload Built Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-installer-${{ matrix.build_type }}
          path: publish/*.exe
