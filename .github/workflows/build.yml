name: 2 - Build Rustdesk Installers

on:
  workflow_call:
    inputs:
      rustdesk_config:
        required: true
        type: string
      rustdesk_password:
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [default, jeff]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Prepared Artifacts
        uses: actions/download-artifact@v4
        with:
          name: prep-artifacts
          path: .

      - name: Set Environment Variables
        run: |
          echo "RUSTDESK_CONFIG=${{ inputs.rustdesk_config }}" >> $GITHUB_ENV
          echo "RUSTDESK_PASSWORD=${{ inputs.rustdesk_password }}" >> $GITHUB_ENV
        shell: bash

      - name: Debug Secrets (Redacted)
        run: |
          if ($env:RUSTDESK_CONFIG -eq "") { Write-Output "⚠ RUSTDESK_CONFIG is missing!" } else { Write-Output "✅ RUSTDESK_CONFIG is set!" }
          if ($env:RUSTDESK_PASSWORD -eq "") { Write-Output "⚠ RUSTDESK_PASSWORD is missing!" } else { Write-Output "✅ RUSTDESK_PASSWORD is set!" }
        shell: pwsh

      - name: Modify Configuration.cs (Jeff)
        if: matrix.build_type == 'jeff'
        run: |
          $configFile = ".\RustdeskSetup\Configuration.cs"
          $configContent = Get-Content $configFile

          $configValue = "private const string DefaultConfigValue = `"$($env:RUSTDESK_CONFIG)`";"
          $passwordValue = "private const string DefaultPasswordValue = `"$($env:RUSTDESK_PASSWORD)`";"

          $newConfigContent = $configContent -replace 'private const string DefaultConfigValue = .*;', $configValue
          $newConfigContent = $newConfigContent -replace 'private const string DefaultPasswordValue = .*;', $passwordValue

          $newConfigContent | Set-Content $configFile
        shell: pwsh

      - name: Build Project
        run: dotnet build RustdeskSetup.sln --configuration Release
