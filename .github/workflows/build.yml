name: 2 - Build Rustdesk Installers

on:
  workflow_call:  # Allows execution when called by master.yml
  workflow_run:
    workflows: ["Prepare Build Environment"]
    types:
      - completed

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [default, jeff]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Prepared Artifacts
        uses: actions/download-artifact@v4
        with:
          name: prep-artifacts
          path: .

      - name: Debug Secrets (Redacted)
        run: |
          if ("${{ secrets.RUSTDESK_CONFIG }}" -eq "") { Write-Output "⚠ RUSTDESK_CONFIG is missing!" }
          if ("${{ secrets.RUSTDESK_PASSWORD }}" -eq "") { Write-Output "⚠ RUSTDESK_PASSWORD is missing!" }
        shell: pwsh

      - name: Set Environment Variables
        env:
          RUSTDESK_CONFIG: ${{ secrets.RUSTDESK_CONFIG }}
          RUSTDESK_PASSWORD: ${{ secrets.RUSTDESK_PASSWORD }}
        run: |
          echo "BUILD_TYPE=${{ matrix.build_type }}" >> $GITHUB_ENV
        shell: bash

      - name: Modify Configuration.cs (Jeff)
        if: matrix.build_type == 'jeff'
        run: |
          $configFile = ".\RustdeskSetup\Configuration.cs"
          $configContent = Get-Content $configFile

          # Expanding environment variables properly
          $configValue = "private const string DefaultConfigValue = `"$($env:RUSTDESK_CONFIG)`";"
          $passwordValue = "private const string DefaultPasswordValue = `"$($env:RUSTDESK_PASSWORD)`";"

          # Replacing the content
          $newConfigContent = $configContent -replace 'private const string DefaultConfigValue = .*;', $configValue
          $newConfigContent = $newConfigContent -replace 'private const string DefaultPasswordValue = .*;', $passwordValue
          
          # Save the modified file
          $newConfigContent | Set-Content $configFile
        shell: pwsh

      - name: Build Project
        run: dotnet build RustdeskSetup.sln --configuration Release
