full_build_default:
  runs-on: windows-latest
  needs: generate_version  # Ensure this job runs after the version generation
  outputs:
    fullversion: ${{ needs.generate_version.outputs.fullversion }}
    version: ${{ needs.generate_version.outputs.version }}
  steps:
    - name: Validate Required Secrets
      run: |
        $missing = @()
        if (-not "${{ secrets.RUSTDESK_CONFIG }}") { $missing += "RUSTDESK_CONFIG" }
        if (-not "${{ secrets.RUSTDESK_PASSWORD }}") { $missing += "RUSTDESK_PASSWORD" }
        if (-not "${{ secrets.CODE_SIGNING_CERTIFICATE }}") { $missing += "CODE_SIGNING_CERTIFICATE" }
        if (-not "${{ secrets.CODE_SIGNING_CERTIFICATE_PASSWORD }}") { $missing += "CODE_SIGNING_CERTIFICATE_PASSWORD" }
        if (-not "${{ secrets.GITHUB_TOKEN }}") { $missing += "GITHUB_TOKEN" }
        if (-not "${{ secrets.RELEASE_TOKEN }}") { $missing += "RELEASE_TOKEN" }
        if (-not "${{ needs.generate_version.outputs.fullversion }}" ) { $missing += "FULLVERSION" }
        if (-not "${{ needs.generate_version.outputs.version }}" ) { $missing += "VERSION" }
        
        if ($missing.Count -gt 0) {
          Write-Host "❌ Missing required secrets: $($missing -join ', ')"
          exit 1
        } else {
          Write-Host "✅ All required secrets are set!"
        }
      shell: pwsh

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    - name: Debug - Display fullversion and version values
      run: |
        echo "FullVersion: ${{ needs.generate_version.outputs.fullversion }}"
        echo "Version: ${{ needs.generate_version.outputs.version }}"
      shell: pwsh

    - name: Debug - Display .csproj Content
      run: |
        Get-Content rustdesk-setup.csproj  

    - name: Restore dependencies
      run: dotnet restore "rustdesk-setup.csproj"

    - name: Build & Publish (Default)
      run: |
        dotnet publish "rustdesk-setup.csproj" --configuration Release --output "publish" --no-restore --no-cache /p:AssemblyVersion=${{ needs.generate_version.outputs.fullversion }} /p:FileVersion=${{ needs.generate_version.outputs.fullversion }} /p:Version=${{ needs.generate_version.outputs.version }} /p:GenerateAssemblyInfo=false
        Rename-Item -Path "publish/rustdesk-setup.exe" -NewName "rustdesk-setup.exe"
      shell: pwsh

    - name: Clean up previous build artifacts
      run: |
        Remove-Item -Recurse -Force .\bin
        Remove-Item -Recurse -Force .\obj
      shell: pwsh

    - name: Upload Built Default Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-installer-default
        path: publish/rustdesk-setup.exe
